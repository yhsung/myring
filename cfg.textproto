# === 時長 & 寫檔（沿用你的設定） ===
duration_ms: 100000
prefer_suspend_clock_for_duration: true
write_into_file: true
file_write_period_ms: 2000      # 略調長，減少頻繁 flush 噪音
flush_period_ms: 2000

# === Buffer 規劃 ===
# 0: CPU/Process 統計，1: 記憶體 poll 與 inode map，2: ftrace（事件量較大）
buffers: { size_kb: 32768  fill_policy: RING_BUFFER }  # idx=0
buffers: { size_kb: 65536  fill_policy: RING_BUFFER }  # idx=1
buffers: { size_kb: 262144 fill_policy: RING_BUFFER }  # idx=2  (ftrace 用大一點)

# === (A) 整機/程序 記憶體統計 ===

# 1. /proc/meminfo, /proc/vmstat, /proc/stat 等定期快照
data_sources: {
  config {
    name: "linux.sys_stats"
    target_buffer: 1
    sys_stats_config {
      meminfo_period_ms: 1000   # 全機 RAM/Cache/Swap 等
      vmstat_period_ms: 1000    # 缺頁/回收/寫回等 counters
      stat_period_ms: 1000      # CPU time, ctxt 等（做對照）
      # 若 kernel 支援 PSI（/proc/pressure/*），可打開：
      # psi_poll_ms: 1000
    }
  }
}

# 2. 各進程 RSS/缺頁/CPU time 追蹤
data_sources: {
  config {
    name: "linux.process_stats"
    target_buffer: 0
    process_stats_config {
      scan_all_processes_on_start: true
      proc_stats_poll_ms: 1000
      record_thread_names: true
      # include_thread_comm: true   # 需要時再開
    }
  }
}

# 3. 對應 inode ↔ file（可用來判斷哪些檔案在吃記憶體/熱頁）
data_sources: {
  config {
    name: "linux.inode_file_map"
    target_buffer: 1
    # 無額外必填欄位，啟用即可
  }
}

# === (B) ftrace：記憶體事件（可選擇性開啟） ===

data_sources: {
  config {
    name: "linux.ftrace"
    target_buffer: 2
    ftrace_config {
      # 你原本的事件（保留）
      ftrace_events: "sched/sched_switch"
      ftrace_events: "irq/irq_handler_entry"
      ftrace_events: "power/cpu_frequency"

      # ====== 記憶體分配/釋放 ======
      ftrace_events: "kmem/kmalloc"
      ftrace_events: "kmem/kmalloc_node"
      ftrace_events: "kmem/kfree"
      ftrace_events: "kmem/kmem_cache_alloc"
      ftrace_events: "kmem/kmem_cache_free"

      # ====== 頁面配置/回收/壓力 ======
      ftrace_events: "mm_page_alloc/mm_page_alloc"        # 有些 kernel 在 kmem 或 mm_page_alloc system
      ftrace_events: "mm_page_alloc/mm_page_free"
      ftrace_events: "vmscan/mm_vmscan_direct_reclaim_begin"
      ftrace_events: "vmscan/mm_vmscan_direct_reclaim_end"
      ftrace_events: "vmscan/mm_vmscan_kswapd_wake"
      ftrace_events: "vmscan/mm_vmscan_kswapd_sleep"

      # ====== OOM 與寫回 ======
      ftrace_events: "oom/oom_kill"
      ftrace_events: "writeback/writeback_start"
      ftrace_events: "writeback/writeback_written"

      # ====== 記憶體壓力（PSI）tracepoint（若 kernel 有開） ======
      ftrace_events: "psi/psi_event"

      # CPU DVFS / Idle
      ftrace_events: "power/cpu_frequency"
      ftrace_events: "power/cpu_idle"

      # I/O 調度（對 fileio 測試有幫助）
      ftrace_events: "block/block_rq_issue"
      ftrace_events: "block/block_rq_complete"
      ftrace_events: "block/block_bio_queue"

      # 可視需要加：
      ftrace_events: "filemap/mm_filemap_add_to_page_cache"
      ftrace_events: "filemap/mm_filemap_delete_from_page_cache"
      ftrace_events: "compaction/mm_compaction_begin"
      ftrace_events: "compaction/mm_compaction_end"

      buffer_size_kb: 2048        # 每-CPU ftrace 子緩衝大小（依事件量調整）
      drain_period_ms: 250        # 拉資料到 Perfetto buffer 的頻率
      atrace_apps: ""             # 不用 atrace，純 kernel 事件
    }
  }
}

